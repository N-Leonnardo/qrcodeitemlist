{"version":3,"sources":["components/Qrcodescanner.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","btn","marginBottom","Qrcodescanner","useState","scanResultWebCam","setScanResultWebCam","useRef","name","setName","type","setType","desc","setDesc","barcode","setBarcode","className","delay","style","width","onError","error","console","log","onScan","result","onSubmit","e","preventDefault","axios","post","then","res","catch","err","onChange","target","value","for","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAwFA,IAAMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACTC,UAAW,IAEbC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAa,SACbC,WAAY,UACZC,MAAO,OACPC,QAAS,IAEXC,IAAM,CACJR,UAAW,GACXS,aAAc,QAGLC,EAlGf,WAA0B,IAAD,EAC0BC,mBAAS,IADnC,mBAChBC,EADgB,KACEC,EADF,QAEPjB,IACFkB,iBAAO,MACGH,mBAAS,KAJV,mBAIhBI,EAJgB,KAIVC,EAJU,OAKCL,mBAAS,IALV,mBAKhBM,EALgB,KAKVC,EALU,OAMCP,mBAAS,IANV,mBAMhBQ,EANgB,KAMVC,EANU,OAOOT,mBAAS,IAPhB,mBAOhBU,EAPgB,KAOPC,EAPO,KA8BvB,OACE,8BACM,sBAAKC,UAAU,WAAf,UAEM,sBAAKA,UAAU,WAAf,UACI,yDACA,cAAC,IAAD,CACAC,MAAO,IACPC,MAAO,CAACC,MAAO,QACfC,QAlBQ,SAACC,GACzBC,QAAQC,IAAIF,IAkBIG,OAhBO,SAACC,GACpBA,IACAnB,EAAoBmB,GACpBV,EAAWU,OAeC,0DAA6BpB,QAEjC,8BACA,uBAAMqB,SApCI,SAAAC,GACtBA,EAAEC,iBACFC,IAAMC,KAAK,iCAAkC,CACzCtB,OACAE,OACAE,OACAE,YAECiB,MAAK,SAAAC,GAAG,OAAEV,QAAQC,IAAIS,MACtBC,OAAM,SAAAC,GAAG,OAAEZ,QAAQC,IAAIW,OA2BhB,UACJ,8BACI,iDAA2B,uBAC3B,uBAAOxB,KAAK,OAAOyB,SAAU,SAACR,GAAD,OAAKlB,EAAQkB,EAAES,OAAOC,QAAQA,MAAO7B,OAEtE,8BACI,uBAAO8B,IAAI,OAAX,gCACI,yBAAQH,SAAU,SAACR,GAAD,OAAKhB,EAAQgB,EAAES,OAAOC,QAAQA,MAAO3B,EAAvD,UACI,wBAAQ2B,MAAM,KACd,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,YAAd,uCACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,gBAAd,iCAGZ,8BACI,gDAA0B,uBAC1B,uBAAO3B,KAAK,OAAOyB,SAAU,SAACR,GAAD,OAAKd,EAAQc,EAAES,OAAOC,QAAQA,MAAOzB,OAEtE,8BACI,4CAAsB,uBACtB,4BACKE,OAGT,uBAAOJ,KAAK,sBClET6B,MARf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b5a974e5.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {Container, Card, CardContent, makeStyles, Grid, TextField, Button} from '@material-ui/core';\nimport QRCode from 'qrcode';\nimport QrReader from 'react-qr-reader';\nimport '../styles/Qrcodescanner.css';\nimport axios from 'axios';\n\nfunction Qrcodescanner() { \n  const [scanResultWebCam, setScanResultWebCam] =  useState('');\n  const classes = useStyles();\n  const qrRef = useRef(null);\n  const [name, setName] = useState(\"\"); \n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [barcode, setBarcode] = useState(\"\");\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api/item', {\n        name,\n        type,\n        desc,\n        barcode\n    })\n        .then(res=>console.log(res))\n        .catch(err=>console.log(err))\n}\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result){\n        setScanResultWebCam(result);\n        setBarcode(result);\n    }\n   }\n  return (\n    <div>\n          <div className='displayf'>\n              \n                <div className=\"widthtwo\">\n                    <h3>Qr Code Scan by Web Cam</h3>\n                    <QrReader\n                    delay={300}\n                    style={{width: '100%'}}\n                    onError={handleErrorWebCam}\n                    onScan={handleScanWebCam}\n                    />\n                    <h3>Scanned By WebCam Code: {scanResultWebCam}</h3>\n                </div>\n                <div>\n                <form onSubmit={onSubmitHandler}>\n            <p>\n                <label>Product Name</label><br/>\n                <input type=\"text\" onChange={(e)=>setName(e.target.value)} value={name}/>\n            </p>\n            <p>\n                <label for=\"cars\">Choose a category:</label>\n                    <select onChange={(e)=>setType(e.target.value)} value={type}>\n                        <option value=\"\"></option>\n                        <option value=\"Alcoholic drinks\">Alcoholic drinks</option>\n                        <option value=\"Beverages\">Beverages (Not Alcoholic)</option>\n                        <option value=\"Food\">Food</option>\n                        <option value=\"Personal Care\">Personal Care</option>\n                    </select>\n            </p>\n            <p>\n                <label>Description</label><br/>\n                <input type=\"text\" onChange={(e)=>setDesc(e.target.value)} value={desc}/>\n            </p>\n            <p>\n                <label>Barcode</label><br/>\n                <p>\n                    {barcode}\n                </p>\n            </p>\n            <input type=\"submit\"/>\n        </form>\n\n\n                </div>\n          </div>\n\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    conatiner: {\n      marginTop: 10\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems:  'center',\n      background: '#3f51b5',\n      color: '#fff',\n      padding: 20\n    },\n    btn : {\n      marginTop: 10,\n      marginBottom: 20\n    }\n}));\nexport default Qrcodescanner;\n","import './App.css';\nimport Qrcodescanner from './components/Qrcodescanner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Qrcodescanner />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}